# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build MAAS-PlanScoreCard v15.6

on: 
  workflow_dispatch:
    inputs:
      dateInput:
        description: 'Expiration Date'
        required: true
        default: '8/24/2022'

jobs:
  build:
    runs-on: windows-2019
    env:
      GITHUB_WORKSPACE_PACKAGES_PATH: packages\ESAPI.15.6.0\lib\net45\
      CSPROJ_PATH: PlanScoreCard/PlanScoreCard.csproj
      PROJECT_NAME: PlanScoreCard

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Navigate to Workspace
      run: cd $GITHUB_WORKSPACE
    
    - name: Update Expiration Date
      uses: rshillington/file-content-replacer@master
      with:
        files: "${{ github.workspace }}/PlanScoreCard/Properties/AssemblyInfo.cs"
        from: "EXPIRATION_DATE"
        to: "${{ github.event.inputs.dateInput }}"
        
    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.0.6
      with:
        nuget-version: latest
        
    - name: Download nuget packages
      run: nuget install PlanScoreCard/packages.config -OutputDirectory packages
        
    - name: Add VIC GitHub NuGet repository
      run: nuget source add -Name github -Source "https://nuget.pkg.github.com/Varian-Innovation-Center/index.json" -UserName pszentiv -Password ${{ secrets.ESAPI_READ_TOKEN }} -StorePasswordInClearText         
     
    - name: Download internal ESAPI nuget package
      run: nuget install ESAPI -Version 15.6.0 -OutputDirectory packages    

    - name: Update hint paths in the csproj file
      run: .\.github\workflows\changeESAPIHintPaths.ps1
      
    - name: Build Solution
      run: msbuild.exe PlanScoreCard.sln /nologo /nr:false /p:DeleteExistingFiles=True /p:platform="x64" /p:configuration="Release"
      
    - name: Zip
      shell: powershell
      run: |
        Compress-Archive -Path "$($env:GITHUB_WORKSPACE)/bin/x64/Release/*" -DestinationPath "$($env:GITHUB_WORKSPACE)/$($env:PROJECT_NAME).zip"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
        body: "This is an official release of the '${{ env.PROJECT_NAME }}' project! Supported Eclipse version: v15.6. The generated dll is valid until '${{ github.event.inputs.dateInput }}'."
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: "${{ github.workspace }}/${{ env.PROJECT_NAME }}.zip"
        asset_name: "${{ env.PROJECT_NAME }}.zip"
        asset_content_type: application/zip       
    
